100 get_dev
110 PRINT "This program needs the 'ouptr_bin', 'is_extn' and 'current_line' extensions found on "&mdev$
120 PRINT "Type 'l' to load them. Type 'p' to proceed with the deletion"
130 REMark "current_line" is in "cline_bin"
140 REMark read the documentation in the help subdirectory
150 REMark also for the 'current_line' keyword
160 REMark lrespr cline_bin before using this prog.
170 REMark if the "restoring" message always refers to 0, then you haven't loaded cline_bin
180 :
190 auto%=0:stop%=0:keep%=0
200 a$=cmd$
210 IF a$<>""
220   IF "auto" INSTR a$:auto%=1
230   IF "stop" INSTR a$:stop%=1
240   IF "keep" INSTR a$:keep%=1: REMark keep binaries
250 END IF
260 IF auto%:p
270 IF stop%:QUIT
280 :
290 DEFine PROCedure p
300   IF NOT IS_EXTN ('CURRENT_LINE')
310      PRINT "cline_bin not loaded"
320   ELSE
330      get_dev
340      delete_all_targets
350   END IF
360 END DEFine p
370 :
380 DEFine PROCedure get_dev
390   mdev$="DEV8_"
400 END DEFine get_dev
410 :
420 DEFine PROCedure delete_all_targets
430 REMark this deletes all targets and all intermediary targets, thus forcing
440 REMark a complete rebuild. Caution, this also deletes all lib and rel files
450 LOCal exten$(1)
460   DIM exten$(4,3)
470   exten$(0) = "rel"
480   exten$(1) = "err"
490   exten$(2) = "map"
500   exten$(3) = "log"
510   exten$(4) = "lib"
520   PRINT "Deleting all files with the extensions rel, err, map, log, lib"
530   delete_files_with_extension exten$,mdev$,1
540   COPY mdev$&"minerva_inc_err_copy",mdev$&"minerva_inc_err"
550   COPY mdev$&"keys_err_copy",mdev$&"keys_err"
560   PRINT "Deleting all targets"
570   generic
580   atari
590   gold
600   q40
610   qxl
620   aurora
630   java
640   ptrgen
650   qpc
660   q68
670   qlsd
680   qemu
690 END DEFine delete_all_targets
700 :
710 DEFine PROCedure generic
720   read_datas CURRENT_LINE,"Generic"
730   delete_files
740   DATA "dd_qlnd_new" ,"dd_nd_new","dv3_test",'smsq_sbas_lang','smsq_sbas_control'
750   DATA "smsq_sbas_procs_x","smsq_smsq_cache","smsq_smsq_cache40c","smsq_smsq_fh_os"
760   DATA "smsq_smsq_hotkey","smsq_smsq_lang","smsq_smsq_loader","smsq_sbas_lang"
770   DATA "smsq_smsq_os","smsq_smsq_1mb_os","smsq_smsq_vers","smsq_smsq_wman"
780   DATA "util_thg_thing",'smsq_home_home','smsq_recent_recent',"smsq_sbas_lang"
790   DATA "",""
800 END DEFine generic
810 :
820 DEFine PROCedure atari
830   read_datas CURRENT_LINE,"Atari"
840   delete_files
850   DATA "smsq_atari_driver_dv3","smsq_atari_driver_ser","smsq_atari_driver_ql"
860   DATA "smsq_atari_driver_mono","smsq_atari_hwinit","smsq_atari_nasty"
870   DATA "smsq_atari_kbd_lang"
880   DATA "sys_boot_st_host","smsq_atari_sysspr"
890   DATA "","smsq_atari_SMSQ.PRG",""
900 END DEFine atari_targets
910 :
920 DEFine PROCedure gold
930   read_datas CURRENT_LINE,"(Super)Goldcard"
940   delete_files
950   DATA "smsq_gold_driver_dv3","smsq_gold_driver_most","smsq_gold_driver_nd","smsq_gold_driver_8"
960   DATA "smsq_gold_driver_nds","smsq_gold_driver_ql","smsq_gold_host"
970   DATA "smsq_gold_hwinit","smsq_gold_kbd_abc","smsq_gold_kbd_abc_lang"
980   DATA "smsq_gold_kbd_lang","smsq_gold_nasty","smsq_gold_nasty_s"
990   DATA "smsq_gold_qimi","smsq_gold_roms","sys_gold_boot"
1000   DATA "smsq_gold_sysspr"
1010   DATA     ""
1020   DATA     "smsq_gold_gold8","smsq_gold_gold"
1030   DATA     ""
1040 END DEFine gold
1050 :
1060 DEFine PROCedure java
1070   read_datas CURRENT_LINE,"SMSQmulator"
1080   delete_files
1090   DATA "smsq_java_driver_most","smsq_java_driver_ql","smsq_java_host","smsq_java_smsq_os"
1100   DATA "smsq_java_driver_16"
1110   DATA "smsq_java_driver_8","smsq_java_smsq_1mb_os"
1120   DATA "smsq_java_driver_nfa_nfa","smsq_java_smsq_os"
1130   DATA "smsq_java_hwinit","smsq_java_host","smsq_java_sysspr"
1140   DATA "smsq_java_driver_dv3e","smsq_java_ip_x"
1150   DATA ""
1160   DATA "SMSQ_java_java"
1170   DATA ""
1180 END DEFine java
1190 :
1200 DEFine PROCedure qpc
1210   read_datas CURRENT_LINE,"QPC"
1220   delete_files
1230   DATA 'smsq_qpc_host'
1240   DATA 'smsq_smsq_qpc_os'
1250   DATA 'smsq_qpc_hwinit'
1260   DATA 'smsq_qpc_nasty_e'
1270   DATA 'smsq_qpc_kbd_lang'
1280   DATA 'smsq_qpc_driver_most'
1290   DATA 'smsq_qpc_driver_ql'
1300   DATA 'smsq_qpc_driver_16'
1310   DATA 'smsq_qpc_driver_8'
1320   DATA 'smsq_qpc_sysspr'
1330   DATA 'smsq_qpc_driver_dv3e'
1340   DATA 'smsq_qpc_procs_x'
1350   DATA 'smsq_qpc_cdaudio_x'
1360   DATA 'smsq_qpc_dos_x'
1370   DATA 'smsq_qpc_ip_x'
1380   DATA 'smsq_qpc_driver_qsound'
1390   DATA ""
1400   DATA "smsq_qpc_smsqe.bin"
1410   DATA ""
1420 END DEFine qpc
1430 :
1440 DEFine PROCedure aurora
1450   read_datas CURRENT_LINE,"Aurora"
1460   delete_files
1470   DATA "smsq_gold_driver_dv3","smsq_gold_driver_most","smsq_gold_driver_nd"
1480   DATA "smsq_gold_driver_nds","smsq_gold_driver_ql","smsq_gold_host"
1490   DATA "smsq_gold_hwinit","smsq_gold_kbd_abc","smsq_gold_kbd_abc_lang"
1500   DATA "smsq_gold_kbd_lang","smsq_gold_nasty","smsq_gold_nasty_s"
1510   DATA "smsq_gold_qimi","smsq_gold_roms","sys_gold_boot"
1520   DATA "smsq_gold_sysspr","smsq_aurora_driver_8","smsq_aurora_sysspr"
1530   DATA ""
1540   DATA "smsq_aurora_smsqe","smsq_gold_gold","smsq_gold_gold8"
1550   DATA ""
1560 END DEFine aurora
1570 :
1580 DEFine PROCedure q40
1590   read_datas CURRENT_LINE,"Qx0"
1600   delete_files
1610   DATA "smsq_q40_driver_dv3","smsq_q40_driver_16","smsq_q40_cache"
1620   DATA "smsq_q40_driver_ser","smsq_q40_driver_ser","smsq_q40_hwinit"
1630   DATA "smsq_q40_kbd_lang","smsq_q40_nasty","smsq_q40_os"
1640   DATA "smsq_q40_driver_ql","smsq_sbas_procs_x_q60"
1650   DATA "smsq_q40_sysspr","smsq_q40_cachemode","smsq_smsq_q40_os"
1660   DATA ""
1670   DATA "smsq_q40_rom"
1680   DATA "smsq_q40_rom_lo","smsq_q40_rom_hi"
1690   DATA "smsq_q40_boot_Q40_gz","smsq_q40_boot_Q40_ROM","smsq_q40_boot_Q40_ROM_HI"
1700   DATA "smsq_q40_boot_Q40_ROM_LO"
1710   DATA ""
1720 END DEFine q40
1730 :
1740 DEFine PROCedure qxl
1750   read_datas CURRENT_LINE,"QXL"
1760   delete_files
1770   DATA "smsq_qxl_driver_16","smsq_qxl_driver_nd","smsq_qxl_driver_most"
1780   DATA "smsq_qxl_ecache","smsq_qxl_driver_ql","smsq_qxl_host","smsq_qxl_hwinit"
1790   DATA "smsq_qxl_kbd_lang","smsq_qxl_nasty_e","smsq_qxl_procs_x"
1800   DATA "smsq_qxl_test","smsq_qxl_driver_dv3e","smsq_qxl_sysspr"
1810   DATA ""
1820   DATA "smsq_qxl_smsqe.exe"
1830   DATA ""
1840 END DEFine qxl
1850 :
1860 DEFine PROCedure q68
1870   read_datas CURRENT_LINE,"Q68"
1880   delete_files
1890   DATA "smsq_q68_driver_16","smsq_q68_driver_nd","smsq_q68_driver_most"
1900   DATA "smsq_q68_driver_ql","smsq_q68_hwinit" ,"smsq_smsq_q68_os"
1910   DATA "smsq_q68_kbd_lang","smsq_q68_nasty","smsq_q68_sbas_procs_x"
1920   DATA "smsq_q68_driver_dv3","smsq_q40_sysspr","smsq_q68_driver_8"
1930   DATA ""
1940   DATA "smsq_q68_RAM_SYS","smsq_q68_SMSQ_4_WIN"
1950   DATA ""
1960 END DEFine q68
1970 :
1980 DEFine PROCedure ptrgen
1990   read_datas CURRENT_LINE;"Qdos EE"
2000   delete_files
2010   DATA ""
2020   DATA "ee_wman_wman","ee_ptr_gen","ee_hot_rext_german","ee_hot_rext_french","ee_hot_rext_english",""
2030 END DEFine ptrgen
2040 :
2050 DEFine PROCedure qlsd
2060   read_datas CURRENT_LINE,"QL-SD"
2070   delete_files
2080   DATA ""
2090   DATA "dv3_qlsd_driver_bin","dv3_qlsd_driver_rom", "dv3_qlsd_driverWQ_bin"
2100   DATA ""
2110 END DEFine qlsd
2120 :
2130 DEFine PROCedure qemu
2140   read_datas CURRENT_LINE,"Q-EMU"
2150   delete_files
2160   DATA "smsq_qem_driver_ql"
2170   DATA "smsq_qem_driver_16"
2180   DATA "smsq_qem_hwinit"
2190   DATA "smsq_qem_procs"
2200   DATA ""
2210   DATA "smsq_qem_SMSQ_QEM"
2220   DATA ""
2230 END DEFine qlsd
2240 :
2250 DEFine PROCedure read_datas (line_number,target$)
2260 REMark this reads the datas as of the line number given as params
2270 REMark and puts them in the global arrays delete$ and keep$
2280 LOCal lp%,a$
2290   DIM delete$(100,60)
2300   RESTORE line_number                      : REMark start reading from here
2310   PRINT "   ";target$
2320   FOR lp% = 0 TO 100
2330     READ a$                                : REMark get filename of modules
2340     IF a$ ="":EXIT lp%                     : REMark finished
2350     delete$(lp%)=mdev$&a$
2360   END FOR lp%
2370   DIM keep$(100,60)
2380   FOR lp% = 0 TO 100
2390     READ a$                                : REMark get filename of entire smsqe file(s)
2400     IF a$ ="":EXIT lp%                     : REMark finished
2410     keep$(lp%)=mdev$&a$
2420   END FOR lp%
2430 END DEFine read_datas
2440 :
2450 DEFine PROCedure delete_files
2460 REMark delete all files held in delete$
2470 LOCal stop_here%,lp%
2480   stop_here%=DIMN(delete$,1)
2490   FOR lp%=0 TO stop_here%
2500     IF delete$(lp%)="":EXIT lp%
2510     DELETE delete$(lp%)
2520   END FOR lp%
2530   IF NOT keep%
2540     stop_here%=DIMN(keep$,1)
2550     FOR lp%=0 TO stop_here%
2560       IF keep$(lp%)="":EXIT lp%
2570       DELETE keep$(lp%)
2580     END FOR lp%
2590   END IF
2600 END DEFine delete_files
2610 :
2620 DEFine PROCedure sa
2630   SAVE_O dev8_extras_del_all_bas
2640 END DEFine sa
2650 :
2660 DEFine PROCedure delete_files_with_extension(ext$,mdir$,ddown%)
2670 REMark this deletes all files in the dir mdir$ with the extension ext$
2680 REMark possibly drilling down to all subirs(ddown%<>0) to do the same there
2690 REMark by calling itself recursively
2700 REMark It would be more efficient to call it with an array of extensions
2710 LOCal chan%,lp%,myfile$,a$,device$,t%,exlen%,b$,count%,i%
2720   FOR lp%=1 TO 50
2730     myfile$="ram1_dele_extns"&RND(1 TO 80)&RND (1 TO 80) & RND (1 TO 50)
2740     chan%=FOP_OVER (myfile$)               : REMark try to open unique file
2750     IF chan%>0:EXIT lp%
2760   END FOR lp%
2770   IF chan%<0:RETurn                        : REMark ooops!!!!
2780   exlen%=3
2790   device$=mdir$(1 TO 5)
2800   WDIR#chan%,mdir$                         : REMark dir of this rep in file
2810   GET#chan%\0                              : REMark reset file pointer to start
2820   count%=DIMN(ext$,1)
2830   REPeat lp%
2840     IF EOF(#chan%):EXIT lp%
2850     INPUT#chan%,a$                         : REMark get filename
2860     IF a$="":NEXT lp%
2870     a$=device$&a$
2880     t%= ' ->' INSTR a$                     : REMark is it a subdir?
2890     IF t% AND ddown%
2900       delete_files_with_extension ext$,a$(1 TO t%-1),ddown% : REMark yes, possibly drill down
2910       NEXT lp%
2920     END IF
2930     t%=LEN(a$)
2940     IF t%<exlen%:NEXT lp%                  : REMark filename is shorter than extension
2950     b$= a$(t%-exlen%+1 TO)
2960     FOR i%=0 TO count%
2970       IF  b$==ext$(i%) : DELETE a$ :EXIT i%
2980     END FOR i%
2990   END REPeat lp%
3000   CLOSE#chan%
3010   DELETE myfile$
3020 END DEFine delete_files_with_extension
3030 :
3040 DEFine PROCedure l
3050   LRESPR "dev8_extras_source_outptr_bin"
3060   LRESPR "dev8_extras_blinker_bin"
3070   LRESPR "dev8_extras_cline_bin"
3080 END DEFine l
3090 :
