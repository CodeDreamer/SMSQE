100 get_dev
110 PRINT "This program needs the 'ouptr_bin', 'is_extn' and 'current_line' extensions found on "&mdev$
120 PRINT "Type 'l' to load them. Type 'p' to proceed with the deletion"
130 REMark "current_line" is in "cline_bin"
140 REMark read the documentation in the help subdirectory
150 REMark also for the 'current_line' keyword
160 REMark lrespr cline_bin before using this prog.
170 REMark if the "restoring" message always refers to 0, then you haven't loaded cline_bin
180 :
190 auto%=0:stop%=0:keep%=0
200 a$=cmd$
210 IF a$<>""
220   IF "auto" INSTR a$:auto%=1
230   IF "stop" INSTR a$:stop%=1
240   IF "keep" INSTR a$:keep%=1: REMark keep binaries
250 END IF
260 IF auto%:p
270 IF stop%:QUIT
280 :
290 DEFine PROCedure p
300   IF NOT IS_EXTN ('CURRENT_LINE')
310      PRINT "cline_bin not loaded"
320   ELSE
330      get_dev
340      delete_all_targets
350   END IF
360 END DEFine p
370 :
380 DEFine PROCedure get_dev
390   mdev$="DEV8_"
400 END DEFine get_dev
410 :
420 DEFine PROCedure delete_all_targets
430 REMark this deletes all targets and all intermediary targets, thus forcing
440 REMark a complete rebuild. Caution, this also deletes all lib and rel files
450 local exten$(1)
460   dim exten$(4,3)
470   exten$(0) = "rel"
480   exten$(1) = "err"
490   exten$(2) = "map"
500   exten$(3) = "log"
510   exten$(4) = "lib"
520   PRINT "Deleting all files with the extensions rel, err, map, log, lib"
530   delete_files_with_extension exten$,mdev$,1
540   COPY mdev$&"minerva_inc_err_copy",mdev$&"minerva_inc_err"
550   COPY mdev$&"keys_err_copy",mdev$&"keys_err"
560   PRINT "Deleting all targets"
570   generic
580   atari
590   gold
600   q40
610   qxl
620   aurora
630   java
640   ptrgen
650   qpc
660   q68
670   qlsd
680 END DEFine delete_all_targets
690 :
700 DEFine PROCedure generic
710   read_datas CURRENT_LINE,"Generic"
720   delete_files
730   DATA "dd_qlnd_new" ,"dd_nd_new","dv3_test",'smsq_sbas_lang','smsq_sbas_control'
740   DATA "smsq_sbas_procs_x","smsq_smsq_cache","smsq_smsq_cache40c","smsq_smsq_fh_os"
750   DATA "smsq_smsq_hotkey","smsq_smsq_lang","smsq_smsq_loader","smsq_sbas_lang"
760   DATA "smsq_smsq_os","smsq_smsq_1mb_os","smsq_smsq_vers","smsq_smsq_wman"
770   DATA "util_thg_thing",'smsq_home_home','smsq_recent_recent',"smsq_sbas_lang"
780   DATA "",""
790 END DEFine generic
800 :
810 DEFine PROCedure atari
820   read_datas CURRENT_LINE,"Atari"
830   delete_files
840   DATA "smsq_atari_driver_dv3","smsq_atari_driver_ser","smsq_atari_driver_ql"
850   DATA "smsq_atari_driver_mono","smsq_atari_hwinit","smsq_atari_nasty"
860   DATA "smsq_atari_kbd_lang"
870   DATA "sys_boot_st_host","smsq_atari_sysspr"
880   DATA "","smsq_atari_SMSQ.PRG",""
890 END DEFine atari_targets
900 :
910 DEFine PROCedure gold
920   read_datas CURRENT_LINE,"(Super)Goldcard"
930   delete_files
940   DATA "smsq_gold_driver_dv3","smsq_gold_driver_most","smsq_gold_driver_nd","smsq_gold_driver_8"
950   DATA "smsq_gold_driver_nds","smsq_gold_driver_ql","smsq_gold_host"
960   DATA "smsq_gold_hwinit","smsq_gold_kbd_abc","smsq_gold_kbd_abc_lang"
970   DATA "smsq_gold_kbd_lang","smsq_gold_nasty","smsq_gold_nasty_s"
980   DATA "smsq_gold_qimi","smsq_gold_roms","sys_gold_boot"
990   DATA "smsq_gold_sysspr"
1000   DATA     ""
1010   DATA     "smsq_gold_gold8","smsq_gold_gold"
1020   DATA     ""
1030 END DEFine gold
1040 :
1050 DEFine PROCedure java
1060   read_datas CURRENT_LINE,"SMSQmulator"
1070   delete_files
1080   DATA "smsq_java_driver_most","smsq_java_driver_ql","smsq_java_host","smsq_java_smsq_os"
1090   DATA "smsq_java_driver_16"
1100   DATA "smsq_java_driver_8","smsq_java_smsq_1mb_os"
1110   DATA "smsq_java_driver_nfa_nfa","smsq_java_smsq_os"
1120   DATA "smsq_java_hwinit","smsq_java_host","smsq_java_sysspr"
1130   DATA "smsq_java_driver_dv3e","smsq_java_ip_x"
1140   DATA ""
1150   DATA "SMSQ_java_java"
1160   DATA ""
1170 END DEFine java
1180 :
1190 DEFine PROCedure qpc
1200   read_datas CURRENT_LINE,"QPC"
1210   delete_files
1220   DATA 'smsq_qpc_host'
1230   DATA 'smsq_smsq_qpc_os'
1240   DATA 'smsq_qpc_hwinit'
1250   DATA 'smsq_qpc_nasty_e'
1260   DATA 'smsq_qpc_kbd_lang'
1270   DATA 'smsq_qpc_driver_most'
1280   DATA 'smsq_qpc_driver_ql'
1290   DATA 'smsq_qpc_driver_16'
1300   DATA 'smsq_qpc_driver_8'
1310   DATA 'smsq_qpc_sysspr'
1320   DATA 'smsq_qpc_driver_dv3e'
1330   DATA 'smsq_qpc_procs_x'
1340   DATA 'smsq_qpc_cdaudio_x'
1350   DATA 'smsq_qpc_dos_x'
1360   DATA 'smsq_qpc_ip_x'
1370   DATA ""
1380   DATA "smsq_qpc_smsqe.bin"
1390   DATA ""
1400 END DEFine qpc
1410 :
1420 DEFine PROCedure aurora
1430   read_datas CURRENT_LINE,"Aurora"
1440   delete_files
1450   DATA "smsq_gold_driver_dv3","smsq_gold_driver_most","smsq_gold_driver_nd"
1460   DATA "smsq_gold_driver_nds","smsq_gold_driver_ql","smsq_gold_host"
1470   DATA "smsq_gold_hwinit","smsq_gold_kbd_abc","smsq_gold_kbd_abc_lang"
1480   DATA "smsq_gold_kbd_lang","smsq_gold_nasty","smsq_gold_nasty_s"
1490   DATA "smsq_gold_qimi","smsq_gold_roms","sys_gold_boot"
1500   DATA "smsq_gold_sysspr","smsq_aurora_driver_8","smsq_aurora_sysspr"
1510   DATA ""
1520   DATA "smsq_aurora_smsqe","smsq_gold_gold","smsq_gold_gold8"
1530   DATA ""
1540 END DEFine aurora
1550 :
1560 DEFine PROCedure q40
1570   read_datas CURRENT_LINE,"Qx0"
1580   delete_files
1590   DATA "smsq_q40_driver_dv3","smsq_q40_driver_16","smsq_q40_cache"
1600   DATA "smsq_q40_driver_ser","smsq_q40_driver_ser","smsq_q40_hwinit"
1610   DATA "smsq_q40_kbd_lang","smsq_q40_nasty","smsq_q40_os"
1620   DATA "smsq_q40_driver_ql","smsq_sbas_procs_x_q60"
1630   DATA "smsq_q40_sysspr","smsq_q40_cachemode","smsq_smsq_q40_os"
1640   DATA ""
1650   DATA "smsq_q40_rom"
1660   DATA "smsq_q40_rom_lo","smsq_q40_rom_hi"
1670   DATA "smsq_q40_boot_Q40_gz","smsq_q40_boot_Q40_ROM","smsq_q40_boot_Q40_ROM_HI"
1680   DATA "smsq_q40_boot_Q40_ROM_LO"
1690   DATA ""
1700 END DEFine q40
1710 :
1720 DEFine PROCedure qxl
1730   read_datas CURRENT_LINE,"QXL"
1740   delete_files
1750   DATA "smsq_qxl_driver_16","smsq_qxl_driver_nd","smsq_qxl_driver_most"
1760   DATA "smsq_qxl_ecache","smsq_qxl_driver_ql","smsq_qxl_host","smsq_qxl_hwinit"
1770   DATA "smsq_qxl_kbd_lang","smsq_qxl_nasty_e","smsq_qxl_procs_x"
1780   DATA "smsq_qxl_test","smsq_qxl_driver_dv3e","smsq_qxl_sysspr"
1790   DATA ""
1800   DATA "smsq_qxl_smsqe.exe"
1810   DATA ""
1820 END DEFine qxl
1830 :
1840 DEFine PROCedure q68
1850   read_datas CURRENT_LINE,"Q68"
1860   delete_files
1870   DATA "smsq_q68_driver_16","smsq_q68_driver_nd","smsq_q68_driver_most"
1880   DATA "smsq_q68_driver_ql","smsq_q68_hwinit" ,"smsq_smsq_q68_os"
1890   DATA "smsq_q68_kbd_lang","smsq_q68_nasty","smsq_q68_sbas_procs_x"
1900   DATA "smsq_q68_driver_dv3","smsq_q40_sysspr","smsq_q68_driver_8"
1910   DATA ""
1920   DATA "smsq_q68_RAM_SYS","smsq_q68_SMSQ_4_WIN"
1930   DATA ""
1940 END DEFine q68
1950 :
1960 DEFine PROCedure ptrgen
1970   read_datas CURRENT_LINE;"Qdos EE"
1980   delete_files
1990   DATA ""
2000   DATA "ee_wman_wman","ee_ptr_gen","ee_hot_rext_german","ee_hot_rext_french","ee_hot_rext_english",""
2010 END DEFine ptrgen
2020 :
2030 DEFine PROCedure qlsd
2040   read_datas CURRENT_LINE,"QL-SD"
2050   delete_files
2060   DATA ""
2070   DATA "dv3_qlsd_driver_bin","dv3_qlsd_driver_rom", "dv3_qlsd_driverWQ_bin"
2080   DATA ""
2090 END DEFine qlsd
2100 :
2110 DEFine PROCedure read_datas (line_number,target$)
2120 REMark this reads the datas as of the line number given as params
2130 REMark and puts them in the global arrays delete$ and keep$
2140 LOCal lp%,a$
2150   DIM delete$(100,60)
2160   RESTORE line_number                      : REMark start reading from here
2170   PRINT "   ";target$
2180   FOR lp% = 0 TO 100
2190     READ a$                                : REMark get filename of modules
2200     IF a$ ="":EXIT lp%                     : REMark finished
2210     delete$(lp%)=mdev$&a$
2220   END FOR lp%
2230   DIM keep$(100,60)
2240   FOR lp% = 0 TO 100
2250     READ a$                                : REMark get filename of entire smsqe file(s)
2260     IF a$ ="":EXIT lp%                     : REMark finished
2270     keep$(lp%)=mdev$&a$
2280   END FOR lp%
2290 END DEFine read_datas
2300 :
2310 DEFine PROCedure delete_files
2320 REMark delete all files held in delete$
2330 LOCal stop_here%,lp%
2340   stop_here%=DIMN(delete$,1)
2350   FOR lp%=0 TO stop_here%
2360     IF delete$(lp%)="":EXIT lp%
2370     DELETE delete$(lp%)
2380   END FOR lp%
2390   IF NOT keep%
2400     stop_here%=DIMN(keep$,1)
2410     FOR lp%=0 TO stop_here%
2420       IF keep$(lp%)="":EXIT lp%
2430       DELETE keep$(lp%)
2440     END FOR lp%
2450   END IF
2460 END DEFine delete_files
2470 :
2480 DEFine PROCedure sa
2490   SAVE_O dev8_extras_del_all_bas
2500 END DEFine sa
2510 :
2520 DEFine PROCedure delete_files_with_extension(ext$,mdir$,ddown%)
2530 REMark this deletes all files in the dir mdir$ with the extension ext$
2540 REMark possibly drilling down to all subirs(ddown%<>0) to do the same there
2550 REMark by calling itself recursively
2560 REMark It would be more efficient to call it with an array of extensions
2570 LOCal chan%,lp%,myfile$,a$,device$,t%,exlen%,b$,count%,i%
2580   FOR lp%=1 TO 50
2590     myfile$="ram1_dele_extns"&RND(1 TO 80)&RND (1 TO 80) & RND (1 TO 50)
2600     chan%=FOP_OVER (myfile$)               : REMark try to open unique file
2610     IF chan%>0:EXIT lp%
2620   END FOR lp%
2630   IF chan%<0:RETurn                        : REMark ooops!!!!
2640   exlen%=3
2650   device$=mdir$(1 TO 5)
2660   WDIR#chan%,mdir$                         : REMark dir of this rep in file
2670   GET#chan%\0                              : REMark reset file pointer to start
2680   count%=dimn(ext$,1)
2690   REPeat lp%
2700     IF EOF(#chan%):EXIT lp%
2710     INPUT#chan%,a$                         : REMark get filename
2720     IF a$="":NEXT lp%
2730     a$=device$&a$
2740     t%= ' ->' INSTR a$                     : REMark is it a subdir?
2750     IF t% AND ddown%
2760       delete_files_with_extension ext$,a$(1 TO t%-1),ddown% : REMark yes, possibly drill down
2770       NEXT lp%
2780     END IF
2790     t%=LEN(a$)
2800     IF t%<exlen%:NEXT lp%                  : REMark filename is shorter than extension
2810     b$= a$(t%-exlen%+1 TO)
2820     for i%=0 to count%
2830       IF  b$==ext$(i%) : DELETE a$ :exit i%
2840     end for i%
2850   END REPeat lp%
2860   CLOSE#chan%
2870   DELETE myfile$
2880 END DEFine delete_files_with_extension
2890 :
2900 DEFine PROCedure l
2910   LRESPR "dev8_extras_source_outptr_bin"
2920   LRESPR "dev8_extras_blinker_bin"
2930   LRESPR "dev8_extras_cline_bin"
2940 END DEFine l
2950 :
