100 REMark please see the help file in the hep subdirectory
110 REMark first automatic version
120 REMark this program needs outptr_bin
130 DEFine PROCedure p
140   do_prune "dev8_"
150 END DEFine p
160 :
170 DEFine PROCedure do_prune (source$)
180 LOCal outchan%
190   DIM result$(1000,60)
200   number_of_files_found%=0
210   find_included_files source$
220   outchan%=FOP_OVER("ram1_prune_result1")
230   find_unused_files source$,outchan%
240   CLOSE#outchan%
250 END DEFine do_prune
260 :
270 DEFine PROCedure find_included_files (source$)
280 REMark source$ = entire filepath for the directory
290 REMark this drills down into the different subdirectories.
300 REMark numberof files_found% and result$ = GLOBAL variables
310 LOCal chan%,lp%,myfile$,a$,t%,tc%,len_old,len_new,date_old,date_new
320   PRINT "Pruning : "&source$&" ..."
330   FOR lp%=1 TO 50
340     myfile$="ram1_prune_intermediary_txt"&RND(1 TO 80)&RND (1 TO 80) & RND (1 TO 50)
350     chan%=FOP_NEW (myfile$)            : REMark try to open unique file
360     IF chan%>0:EXIT lp%
370   END FOR lp%
380   IF chan%<0:PRINT "COULDN'T OPEN TEMP FILE!":RETurn                     : REMark ooops!!!!
390   WDIR#chan%,source$                    : REMark dir of this rep in file
400   GET#chan%\0                           : REMark reset file pointer to start
410   REPeat lp%
420     IF EOF(#chan%):EXIT lp%
430     INPUT#chan%,a$                      : REMark get filename
440     IF a$="":NEXT lp%
450     t%= ' ->' INSTR a$                  : REMark is it a subdir?
460     IF t%
470       find_included_files source$(1 TO 5)&a$(1 TO t%-1)&'_'
480       NEXT lp%
490     END IF
500     a$=strip_space$(a$)
510     tc%=LEN(a$)
520     IF a$(tc%-4 TO)=="_cctx":add_files source$(1 TO 5)&a$,1:NEXT lp%
530     IF a$(tc%-3 TO)=="_cct" :add_files source$(1 TO 5)&a$,1:NEXT lp%
540     IF a$(tc%-4 TO)=="_link":add_files source$(1 TO 5)&a$,0:NEXT lp%
550   END REPeat lp%
560   CLOSE#chan%
570   DELETE myfile$
580 END DEFine find_included_files
590 :
600 DEFine PROCedure sa
610   SAVE_O DEV8_extras_prune_bas
620 END DEFine sa
630 :
640 DEFine PROCedure add_files (mfile$,all%)
650 REMark adds the names of the source files contained in mfile $into my array,
660 REMark provided they aren't there already
670 REMark number_of_files_found% and result$ = GLOBAL variables
680 LOCal dir$,chan%,lp%,a$,res%,tot%
690   PRINT "  Scanning : ";mfile$
700   dir$=mfile$(1 TO 5)                   : REMark extract file directory
710   chan%=FOP_IN(mfile$)                  : REMark open infile
720   IF FTYP(#chan%):CLOSE#chan%:RETurn
730   IF chan%<0:RETurn                     : REMark what?
740   tot%=DIMN(result$,1)                  : REMark how much space in array
750   REPeat lp%
760     IF EOF(#chan%):EXIT lp%
770     INPUT#chan%,a$
780     a$=strip_space$(a$)
790     IF LEN(a$)<8 : NEXT lp%             : REMark at least space for 'input '
800     IF NOT all%
810       IF NOT (a$(1 TO 6)=="input " OR a$(1 TO 6)=='librar')
820           NEXT lp%
830       ELSE
840         res%=' ' INSTR a$                : REMark isolate filename
850         IF NOT res%:NEXT lp%             : REMark what, no space???
860         a$=strip_space$(a$(res%+1 TO))   : REMark got filename
870       END IF
880     END IF
890     REMark PRINT "    found : "; a$
900     res%=ASEARCH(result$,a$,0,0)     : REMark filename alreazdy in array?
910     IF res%<0
920        number_of_files_found%=number_of_files_found%+1
930        IF number_of_files_found%>tot%
940          tot%=increase_array (1000)
950          IF NOT tot%:EXIT lp%        : REMark OOOOOOPS!
960          tot%=DIMN(result$,1)
970        END IF
980        result$(number_of_files_found%)=a$
990     END IF
1000   END REPeat lp%
1010   CLOSE#chan%
1020 END DEFine add_files
1030 :
1040 DEFine FuNction strip_space$(string$)
1050 REMark strips space off string string$ at either end
1060 REMark v. 1.01
1070 LOCal lp%,my_string$,length%,counter%
1080   IF string$="":RETurn ""               : REMark if empty, don't do a thing
1090   my_string$=string$
1100   FOR lp%=1 TO LEN(my_string$)
1110     IF LEN (my_string$)=1
1120       IF my_string$=' ':RETurn ''
1130       RETurn my_string$         : REMark strip spaces of start
1140     END IF
1150     IF my_string$(1)<>" ":EXIT lp%
1160     my_string$=my_string$(2 TO)
1170   END FOR lp%
1180   counter%=0
1190   length%=LEN(my_string$)
1200   FOR lp%= length% TO 1 STEP -1
1210     IF my_string$(lp%)<>" ":EXIT lp%
1220     counter%=counter%+1
1230   END FOR lp%                   : REMark look until <> " "
1240   IF counter%=length%:RETurn "" : REMark if only spaces ....
1250   RETurn my_string$(1 TO length%-counter%)
1260 END DEFine strip_space$
1270 :
1280 DEFine FuNction increase_array (increase%)
1290 REMark this incearses the arry by the parameter given.
1300 REMark it MUST be a 2 dim string array
1310 REMark unfortunetaly, this procedure can't be independeant, there is no way to pass
1320 REMark it the array as parameter and redim the array!
1330 REMark this returns 1 of increqse was ok, 0 if not!!!
1340 LOCal dim1%,dim2%,tot,local_array$(0)
1350   dim1%=DIMN(result$,1)
1360   dim2%=DIMN(result$,2)
1370   tot=dim1% + increase%
1380   IF tot> 32000 : RETurn 0
1390   DIM local_array$(tot,dim2%)
1400   ARRCOPY result$,local_array$
1410   DIM result$(tot,dim2%)
1420   ARRCOPY local_array$,result$
1430   RETurn 1
1440 END DEFine increase_array
1450 :
1460 DEFine PROCedure find_unused_files (source$,outchan%)
1470 LOCal lp%,chan%,mdir$,a$,res%,myfile$,t%
1480   FOR lp%=1 TO 50
1490     myfile$="ram1_prune_intermediary_txt"&RND(1 TO 80)&RND (1 TO 80) & RND (1 TO 50)
1500     chan%=FOP_NEW (myfile$)            : REMark try to open unique file
1510     IF chan%>0:EXIT lp%
1520   END FOR lp%
1530   IF chan%<0:PRINT "COULDN'T OPEN TEMP FILE!":RETurn : REMark ooops!!!!
1540   mdir$=source$(1 TO 5)
1550   WDIR#chan%,source$                    : REMark dir of this rep in file
1560   GET#chan%\0                           : REMark reset file pointer to start
1570   REPeat lp%
1580     IF EOF(#chan%):EXIT lp%
1590     INPUT#chan%,a$                      : REMark get filename
1600     IF a$="":NEXT lp%
1610     t%= ' ->' INSTR a$                  : REMark is it a subdir?
1620     IF t%
1630       find_unused_files source$(1 TO 5)&a$(1 TO t%-1)&'_',outchan%
1640       NEXT lp%
1650     END IF
1660     a$=strip_space$(a$)                 : REMark just to be sure
1670     t%=LEN(a$)
1680     IF t%<4: NEXT lp%
1690     IF a$(t%-3 TO)=="_asm"
1700       a$=a$(1 TO t%-3)&'rel'
1710       a$=mdir$&a$
1720       res%=ASEARCH (result$,a$,0,0)
1730       IF res%<0: PRINT #outchan%,a$
1740     END IF
1750   END REPeat lp%
1760   CLOSE#chan%
1770   DELETE myfile$
1780 END DEFine find_unused_files
1790 :
