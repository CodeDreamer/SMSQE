100 DEFine PROCedure p
110   do_the_work
120 END DEFine p
130 :
140 DEFine PROCedure make_my_data (what_machine%)
150 REMark what_machine% = 1 -> generic
160 REMark what_machine% = 2 -> atari
170 REMark what_machine% = 4 -> Gold Card
180 REMark what_machine% = 8 -> Qx0
190 REMark what_machine% = 16 -> QXL
200 REMark these may be combined
210   DIM mdata$(200,50)
220   REMark first make generic data
230   data_count%=1                         : REMark general data count (global var)
240   IF what_machine%&&1
250     generic_data                        : REMark set up generic data
260     read_my_datas                       : REMark and read it
270   END IF
280   IF what_machine%&&2
290      atari_data                         : REMark set up machine specific data....
300      read_my_datas                      : REMark and read it
310   END IF
320   IF what_machine%&&4
330      gc_data                            : REMark set up machine specific data....
340      read_my_datas                      : REMark and read it
350   END IF
360   IF what_machine%&&8
370      q40_data                           : REMark set up machine specific data....
380      read_my_datas                      : REMark and read it
390   END IF
400   IF what_machine%&&16
410      qxl_data                           : REMark set up machine specific data....
420      read_my_datas                      : REMark and read it
430   END IF
440 END DEFine make_my_data
450 :
460 DEFine PROCedure read_my_datas
470 REMark reads datas into the global var mdata$
480 REMark uses data_count% from make_my_data
490 LOCal lp%
500   REPeat lp%
510     READ mdata$(data_count%)
520     IF mdata$(data_count%)="":EXIT lp%
530     data_count%=data_count%+1
540   END REPeat lp%
550 END DEFine read_my_datas
560 :
570 DEFine PROCedure generic_data
580 RESTORE CURRENT_LINE
590   DATA '**** -- SMSQ Generic -- ****'
600   DATA 'smsq_smsq_loader_link'
610   DATA 'smsq_smsq_fh_link'
620   DATA 'smsq_smsq_link'
630   DATA 'smsq_smsq_cache_link'
640   DATA 'smsq_sbas_link'
650   DATA 'smsq_smsq_lang_link'
660   DATA 'smsq_sbas_lang_link'
670   DATA 'smsq_sbas_procs_link'
680   DATA 'smsq_smsq_wman_link'
690   DATA 'smsq_smsq_hotkey_link'
700   DATA 'smsq_smsq_vers_link'
710   DATA 'smsq_home_link'
720   DATA 'smsq_smsq_1mb_link',''
730 END DEFine generic_data
740 :
750 DEFine PROCedure q40_data
760 RESTORE CURRENT_LINE
770   DATA '**** -- Q40/Q60 -- ****'
780   DATA 'smsq_q40_hwinit_link'
790   DATA 'smsq_q40_nasty_link'
800   DATA 'smsq_q40_cache_link'
810   DATA 'smsq_q40_cachemode_link'
820   DATA 'smsq_smsq_cache40c_link'
830   DATA 'smsq_q40_driver_ser_link'
840   DATA 'smsq_q40_driver_dv3_link'
850   DATA 'smsq_q40_driver_ql_link'
860   DATA 'smsq_q40_driver_16_link'
870   DATA 'smsq_q40_kbd_lang_link'
880   DATA 'smsq_sbas_procs_q60_link'
890   DATA 'smsq_q40_sysspr_link',''
900 END DEFine q40_data
910 :
920 DEFine PROCedure atari_data
930 RESTORE CURRENT_LINE
940   DATA '**** -- Atari -- ****'
950   DATA 'smsq_atari_hwinit_link'
960   DATA 'smsq_atari_nasty_link'
970   DATA 'smsq_atari_driver_ql_link'
980   DATA 'smsq_atari_driver_mo_link'
990   DATA 'smsq_atari_driver_ser_link'
1000   DATA 'smsq_atari_driver_dv3_link'
1010   DATA 'smsq_atari_kbd_lang_link'
1020   DATA 'smsq_atari_sysspr_link'
1030   DATA 'sys_boot_st_host_link',''
1040 END DEFine atari_data
1050 :
1060 DEFine PROCedure gc_data
1070 RESTORE CURRENT_LINE
1080   DATA '**** -- (Super)GoldCard -- ****'
1090   DATA 'smsq_gold_host_link'
1100   DATA 'smsq_gold_hwinit_link'
1110   DATA 'smsq_gold_nasty_link'
1120   DATA 'smsq_gold_nasty_s_link'
1130   DATA 'smsq_gold_driver_ql_link'
1140   DATA 'smsq_gold_driver_most_link'
1150   DATA 'smsq_gold_driver_nd_link'
1160   DATA 'smsq_gold_driver_nds_link'
1170   DATA 'smsq_gold_driver_dv3_link'
1180   DATA 'smsq_gold_kbd_lang_link'
1190   DATA 'smsq_gold_kbd_abc_lng_link'
1200   DATA 'smsq_gold_kbd_abc_link'
1210   DATA 'smsq_gold_roms_link'
1220   DATA 'smsq_gold_qimi_link'
1230   DATA 'smsq_gold_sysspr_link',''
1240 END DEFine gc_data
1250 :
1260 DEFine PROCedure qxl_data
1270 RESTORE CURRENT_LINE
1280   DATA '**** -- QXL -- ****'
1290   DATA 'smsq_qxl_host_link'
1300   DATA 'smsq_qxl_hwinit_link'
1310   DATA 'smsq_qxl_nasty_e_link'
1320   DATA 'smsq_qxl_driver_ql_link'
1330   DATA 'smsq_qxl_driver_16_link'
1340   DATA 'smsq_qxl_driver_most_link'
1350   DATA 'smsq_qxl_driver_nd_link'
1360   DATA 'smsq_qxl_procs_link'
1370   DATA 'smsq_qxl_driver_dv3e_link'
1380   DATA 'smsq_qxl_kbd_lang_link'
1390   DATA 'smsq_qxl_ecache_link'
1400   DATA 'smsq_qxl_sysspr_link',''
1410 END DEFine qxl_data
1420 :
1430 DEFine PROCedure do_the_work
1440 REMark this tries get the file sizes of all targets
1450 LOCal lp%,bound%,a$,my_error%,tot_err%,rep$,lp2%,mchan%
1460   rep$="dev8_"
1470   mchan%=FOP_OVER('ram1_chk_result')
1480   tot_err%=0
1490   bound%=1+2+4+8+16
1500   make_my_data bound%
1510   bound%=1
1520   REPeat lp%
1530     a$=mdata$(bound%)                    : REMark potential file to compile
1540     bound%=bound%+1
1550     IF a$<>""
1560        PRINT "checking ";a$;"..."
1570        a$=rep$&a$                       : REMark add dir
1580        a$=get_prog_name$(a$)
1590        IF a$<>""
1600         flenn=0
1610          chan%=FOP_IN(a$)
1620          IF chan%>0
1630            flenn=FLEN(#chan%)
1640            CLOSE#chan%
1650          END IF
1660          PRINT#mchan%,a$
1670          PRINT#mchan%,,flenn
1680        END IF
1690     ELSE
1700       EXIT lp%
1710     END IF
1720   END REPeat lp%
1730   CLOSE#mchan%
1740 END DEFine do_the_work
1750 :
1760 DEFine PROCedure atari_target
1770   cmd$='m'
1780   p$=rep$&'sys_boot_st_flp'
1790   f$=rep$&'sys_boot_file'
1800   ah$=rep$&'sys_boot_st_host'
1810   ld$=rep$&'smsq_smsq_loader'
1820   hi$=rep$&'smsq_atari_hwinit'
1830   os1f$=rep$&'smsq_smsq_fh_os'
1840   os1$=rep$&'smsq_smsq_os'
1850   ca$=rep$&'smsq_smsq_cache'
1860   os2$=rep$&'smsq_sbas_control'
1870   ns1$=rep$&'smsq_atari_nasty'
1880   ln1$=rep$&'smsq_smsq_lang'
1890   ln2$=rep$&'smsq_atari_kbd_lang'
1900   ln3$=rep$&'smsq_sbas_lang'
1910   ex1$=rep$&'smsq_sbas_procs_x'
1920   ex2$=rep$&'smsq_atari_driver_dv3'
1930   ex3$=rep$&'smsq_atari_driver_ser'
1940   ex4$=rep$&'smsq_atari_driver_mono'
1950   ex5$=rep$&'smsq_atari_driver_ql'
1960   ex6$=rep$&'smsq_smsq_wman'
1970   ex7$=rep$&'smsq_smsq_hotkey'
1980   ex8$=rep$&'smsq_atari_sysspr'
1990   ex9$=rep$&'smsq_home_home'
2000   nl$=rep$&'sys_boot_null'
2010   IF 'm' INSTR cmd$ = 0: ex4$ = nl$
2020   EW f$, ah$,ld$,hi$,os1f$,os1$,ca$,os2$,ns1$,ln1$,ln2$,ln3$,ex1$,ex2$,ex3$,ex4$,ex5$,ex6$,ex7$,ex8$,ex9$, rep$&'smsq_atari_SMSQ.PRG'
2030 END DEFine atari_target
2040 :
2050 DEFine PROCedure gc_target
2060   f$=rep$&'sys_boot_file'
2070   v$=rep$&'smsq_smsq_vers'
2080   h$=rep$&'smsq_gold_host'
2090   ld$=rep$&'smsq_smsq_loader'
2100   hi$=rep$&'smsq_gold_hwinit'
2110   os1$=rep$&'smsq_smsq_os'
2120   ca$=rep$&'smsq_smsq_cache'
2130   os2$=rep$&'smsq_sbas_control'
2140   ns1$=rep$&'smsq_gold_nasty'
2150   ns2$=rep$&'smsq_gold_nasty_s'
2160   ln1$=rep$&'smsq_smsq_lang'
2170   ln2$=rep$&'smsq_gold_kbd_lang'
2180   ln2a$=rep$&'smsq_gold_kbd_abc_lang'
2190   ln3$=rep$&'smsq_sbas_lang'
2200   ex1$=rep$&'smsq_sbas_procs_x'   : REMark this must be after "roms"
2210   ex2a$=rep$&'smsq_gold_kbd_abc'
2220   ex2$=rep$&'smsq_gold_driver_most'
2230   ex3a$=rep$&'smsq_gold_driver_ql'
2240   ex3q$=rep$&'smsq_gold_qimi'
2250   ex3w$=rep$&'smsq_smsq_wman'
2260   ex4$=rep$&'smsq_gold_driver_dv3'
2270   ex5$=rep$&'smsq_gold_driver_nd'
2280   ex6$=rep$&'smsq_gold_driver_nds'
2290   ex7$=rep$&'smsq_smsq_hotkey'
2300   ex8$=rep$&'smsq_gold_sysspr'
2310   ex9$=rep$&'smsq_home_home'
2320   nl$=rep$&'sys_boot_null'
2330   EW f$, v$,h$,ld$,hi$,os1$,ca$,os2$,ns1$,ns2$,ln1$,ln2$,ln2a$,ln3$,ex2a$,ex2$,ex3a$,ex3q$,ex3w$,ex4$,ex5$,ex6$,ex7$,ex8$,ex1$,ex9$, rep$&'SMSQ_GOLD_gold'
2340 END DEFine gc_target
2350 :
2360 DEFine PROCedure qx0_target
2370   nl$=rep$&'sys_boot_null'
2380   f$=rep$&'sys_boot_file'
2390   qr$=rep$&'sys_boot_q40_rom'
2400   ld$=rep$&'smsq_smsq_loader'
2410   hi$=rep$&'smsq_q40_hwinit'
2420   os1$=rep$&'smsq_smsq_1mb_os' : REMark change for fast memory
2430   ca$=rep$&'smsq_smsq_cache40c'
2440   caq$=rep$&'smsq_q40_cache'
2450   caq4$=rep$&'smsq_q40_cachemode'
2460   os2$=rep$&'smsq_sbas_control'
2470   ns2$=rep$&'smsq_q40_nasty'
2480   ln1$=rep$&'smsq_smsq_lang'
2490   ln2$=rep$&'smsq_q40_kbd_lang'
2500   ln3$=rep$&'smsq_sbas_lang'
2510   ex1$=rep$&'smsq_sbas_procs_x_q60'
2520   ex2$=rep$&'smsq_q40_driver_dv3'
2530   ex3$=rep$&'smsq_q40_driver_ser'
2540   ex4a$=rep$&'smsq_q40_driver_ql'
2550   ex4b$=rep$&'smsq_q40_driver_16'
2560   ex4w$=rep$&'smsq_smsq_wman'
2570   ex5$=rep$&'smsq_q40_sysspr'
2580   ex9$=rep$&'smsq_smsq_hotkey'
2590   ex10$=rep$&'smsq_home_home'
2600   EW f$, qr$,ld$,hi$,os1$,ca$,caq$,os2$,ln1$,ln2$,ln3$,ex1$,ex2$,ex3$,ex4a$,ex4b$,ex4w$,ex5$,ex9$,ex10$,ns2$,caq4$, rep$&'smsq_q40_rom'; p$
2610 END DEFine qx0_target
2620 :
2630 DEFine PROCedure qxl_target
2640   IF FOP_IN (rep$&'smsq_qxl_qxlh.exe') <> -7: INPUT 'QXLH.EXE exists'; cmd$: QUIT
2650   p$   = rep$&'sys_boot_file'
2660   bl$  = rep$&'smsq_qxl_qxl2_exe'
2670   hst$ = rep$&'smsq_qxl_host'
2680   hi$  = rep$&'smsq_qxl_hwinit'
2690   ld$  = rep$&'smsq_smsq_loader'
2700   os1$ = rep$&'smsq_smsq_os'
2710   ca$  = rep$&'smsq_smsq_cache'
2720   os2$ = rep$&'smsq_sbas_control'
2730   ns1$ = rep$&'smsq_qxl_nasty_e'
2740   ln1$ = rep$&'smsq_smsq_lang'
2750   ln2$ = rep$&'smsq_qxl_kbd_lang'
2760   ln3$ = rep$&'smsq_sbas_lang'
2770   ex1$ = rep$&'smsq_qxl_procs_x'
2780   ex2$ = rep$&'smsq_qxl_driver_most'  : REMark Keyboard before CON
2790   ex3$ = rep$&'smsq_qxl_driver_ql'
2800   ex3b$ = rep$&'smsq_qxl_driver_16'
2810   ex3w$ = rep$&'smsq_smsq_wman'
2820   ex4$ = rep$&'smsq_qxl_driver_nd'
2830   ex5$ = rep$&'smsq_qxl_driver_dv3e'
2840   ex6$= rep$&'smsq_smsq_hotkey'
2850   ex7$ = rep$&'smsq_qxl_sysspr'
2860   ex8$=rep$&'smsq_home_home'
2870   last$ = rep$&'smsq_qxl_ecache'
2880   dml$ = rep$&'smsq_qxl_dummy'
2890   qm$  = rep$&'qmon_qxl_bin'
2900   r$='ram1_smsqe.exe' : f$=rep$&'smsq_qxl_smsqe.exe'
2910   DELETE f$
2920   EW p$, hst$,ld$,hi$,os1$,ca$,os2$,ns1$,ln1$,ln2$,ln3$,ex1$,ex2$,ex3$,ex3b$,ex3w$,ex4$,ex5$,ex6$,ex7$,ex8$,last$, r$
2930   EW cct, bl$,r$, f$
2940   DELETE r$
2950   OPEN #4,f$
2960   lenf=FLEN(#4)
2970   lens% = INT ((lenf+511)/512)
2980   lenb% = lenf - lens% * 512
2990   IF lenb%: lenb% = lenb% + 512
3000   BPUT #4\2, lenb% MOD 256, lenb% DIV 256, lens% MOD 256, lens% DIV 256
3010   CLOSE #4
3020 END DEFine qxl_target
3030 :
3040 DEFine FuNction find_target% (current%)
3050   IF "SMSQ Generic" INSTR mdata$(current%):RETurn 1
3060   IF "Atari" INSTR mdata$(current%):RETurn 2
3070   IF "GoldCard" INSTR mdata$(current%):RETurn 4
3080   IF "Q40" INSTR mdata$(current%):RETurn 8
3090   IF "QXL" INSTR mdata$(current%):RETurn 16
3100   RETurn 0                             : REMark huh???
3110 END DEFine find_target%
3120 :
3130 :
3140 DEFine PROCedure sa
3150   SAVE_O dev8_extras_checkfiles_bas
3160 END DEFine sa
3170 :
3180 DEFine FuNction get_prog_name$(file$)
3190 REMark get the program name from the link file
3200 LOCal lp%,chan%,a$,t%,flag%
3210   chan%=FOP_IN(file$)
3220   IF chan%<0:RETurn ""
3230   flag%=0
3240   REPeat lp%
3250     IF EOF(#chan%):a$="":EXIT lp%
3260     INPUT#chan%,a$
3270     t%= 'program' INSTR a$
3280     IF t%
3290       a$=a$(t%+8 TO)
3300       a$=STRIP_SPACES$(a$)
3310       flag%=1
3320       EXIT lp%
3330     END IF
3340   END REPeat lp%
3350   IF NOT flag%
3360      t%='_link' INSTR file$
3370      a$=file$(1 TO t%-1)
3380   END IF
3390   CLOSE #chan%
3400   RETurn a$
3410 END DEFine get_prog_name$
3420 :
