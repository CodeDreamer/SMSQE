100 REMark this prog is also called from dev8_extras_newversion_bas - don't change unless that is changed, too
110 REMark use "t" to zip the binaries
120 REMark command string should be,e.g., "quit binaries delete docopy version312" or just the version number  "312"
130 REMark the docopy must be the last switch before the version.
140 REMark if binaries : also do binaries into separate zipfile
150 REMark if delete delete the binaries (after zipping)
160 a$=cmd$
170 version$="NIX"
180 docopy%=0
190 binaries%=0
200 del%=0
210 quit%=0
220 IF a$<>""
230   IF "binaries" INSTR a$:binaries%=1
240   IF "delete" INSTR a$: del%=1
250   IF "docopy" INSTR a$:docopy%=1
260   IF "quit" INSTR a$:quit%=1
270   t%="version" INSTR a$
280   IF t% : version$=a$(t%+7 TO t%+10)
290 END IF
300 smsqe$="smsqe"&version$&".zip"
310 ddr$="ram3_"
320 p
330 IF quit%:QUIT
340 :
350 DEFine PROCedure p
360   do_all
370   do_individual_dirs
380   IF docopy%:  do_copy a$
390 END DEFine p
400 :
410 DEFine PROCedure do_all
420 REMark this zips the entire SMSQE sources
430 REMark ensure that all non source files have been erased first!
440 LOCal zip$
450   del_zips
460   IF binaries%:do_binaries del%
470   PRINT "Zipping all to one zip file "
480   do_zip " -Q4r9 "&ddr$&smsqe$&" dd_* dv3_* ee_* extras_* iod_* keys_* lang_* mac_* minerva_* sbsext_* smsq_* sys_* uti_* util_*  changes_txt readme_txt styleguide_txt whats_new_txt licence_doc licence_txt"
490 END DEFine do_all
500 :
510 DEFine PROCedure do_individual_dirs
520 LOCal lp%,dirname$
530   RESTORE CURRENT_LINE : REMark make sure no other DATA statement is between this proc anf the "del_zips" proc
540   REPeat lp%
550     READ dirname$
560     IF dirname$="":EXIT lp%
570     PRINT "Zipping "&dirname$
580     do_zip " -Q4r9 "&ddr$&dirname$&".zip "&dirname$&"_*"
590   END REPeat lp%
600   do_qxl_pc
610 END DEFine do_individual_dirs
620 :
630 DEFine PROCedure do_qxl_pc
640 LOCal a$
650   a$=DEV_USE$(7)
660   DEV_USE 7,"nfa1_qxl_"
670   do_zip " -Q4j9 "&ddr$&"qxl.zip "& "dev7_*.asm dev7_qxl.inc dev7_qxlh.exe dev7_current.sts"
680   DEV_USE 7,a$
690 END DEFine do_qxl_pc
700 :
710 DEFine PROCedure sa
720   SAVE_O dev8_extras_zip_it_bas
730 END DEFine sa
740 :
750 DEFine PROCedure del_zips
760 REMark just delete the zip files
770 LOCal lp%,dirname$
780   DELETE ddr$&smsqe$
790   RESTORE CURRENT_LINE
800   REPeat lp%
810     READ dirname$
820     IF dirname$="":EXIT lp%
830   DELETE ddr$&dirname$&".zip"
840   END REPeat lp%
850   DATA "dd","dv3","ee","extras","iod","keys","lang","mac","minerva","sbsext","smsq","sys","uti","util"
860   DATA ""
870 END DEFine d
880 :
890 DEFine PROCedure s
900 REMark this resets the data etc dirs to acceptable values, no longer used
910   DEST_USE dev1_
920   DATA_USE dev1_basic_
930   PROG_USE dev1_progs_
940 END DEFine s
950 :
960 DEFine PROCedure t
970   ddr$="ram3_"
980   smsqe$="3.12"
990   do_binaries 0
1000 END DEFine t
1010 :
1020 DEFine PROCedure do_binaries (do_delete%)
1030 REMark this zips all binary versions and then possibly deletes them
1040 LOCal nbr%,lp%,source$,dest$,zip$,f$
1050   f$ =ddr$&"smsqe"&version$&"_binaries.zip"
1060   CLS
1070   zip$ =' -Q4j9 '&f$&' '
1080   RESTORE CURRENT_LINE
1090   REPeat lp%
1100     READ source$,dest$
1110     IF source$="":EXIT lp%
1120     PRINT "copying "& source$
1130     COPY_O source$,ddr$&dest$
1140     zip$=zip$&ddr$&dest$ & ' '
1150     IF do_delete% AND NOT ("_txt" INSTR source$): DELETE source$
1160   END REPeat lp%
1170   DELETE f$
1180   PRINT "Zipping binaries..."
1190   do_zip zip$
1200   REMark now delete destinations
1210   RESTORE CURRENT_LINE
1220   REPeat lp%
1230     READ dest$,dest$
1240     IF dest$="":EXIT lp%
1250     DELETE ddr$&dest$
1260   END REPeat lp%
1270   PRINT "Binaries done..."
1280   DATA "dev8_smsq_atari_SMSQ.PRG",  "SMSQE.PRG"       : REMark PRG file for ATARI ST/TT, ready to be used
1290   DATA "dev8_smsq_gold_gold",       "GoldCard_bin"    : REMark gold card Ql colours
1300   DATA "dev8_smsq_gold_gold8",      "GoldCard_256colours_bin"
1310   DATA "dev8_smsq_q40_rom",         "Q40_rom"         : REMark q40/q60 use as rom / lrespr file
1320   DATA "dev8_smsq_qxl_smsqe.exe",   "SMSQEQXL.EXE"    : REMark EXE to be run under DOS on i386 compatible systems with a QXL card installed, ready to be used
1330   DATA "dev8_smsq_aurora_SMSQE",    "Aurora_bin"      : REMark aurora 8 bit
1340   DATA "dev8_smsq_java_java",       "SMSQE"           : REMark Code file for SMSQmulator, ready to be used
1350   DATA "dev8_smsq_qpc_smsqe.bin",   "SMSQE.bin"       : REMark Code file for QPC2, ready to be used
1360   DATA "dev8_ee_ptr_gen",           "ptr_gen"         : REMark Part of Extended Environment for the non SMSQ/E (e.g. QDOS, SMSQ), ready to be used
1370   DATA "dev8_ee_wman_wman",         "wman"            : REMark Part of Extended Environment for the non SMSQ/E (e.g. QDOS, SMSQ), ready to be used
1380   DATA "dev8_ee_hot_rext_english",  "hot_rext_english": REMark Part of Extended Environment for the non SMSQ/E (e.g. QDOS, SMSQ), ready to be used
1390   DATA "dev8_ee_hot_rext_french",   "hot_rext_french" : REMark Part of Extended Environment for the non SMSQ/E (e.g. QDOS, SMSQ), ready to be used
1400   DATA "dev8_ee_hot_rext_german",   "hot_rext_german" : REMark Part of Extended Environment for the non SMSQ/E (e.g. QDOS, SMSQ), ready to be used
1410   DATA "dev8_whats_new_txt",        "whats_new_txt"
1420   DATA "dev8_changes_txt",          "changes_txt"
1430   DATA "dev8_readme_txt",           "readme_txt"
1440   DATA "","" : REMark leave TWO empty strings here
1450 END DEFine do_binaries
1460 :
1470 DEFine PROCedure z
1480   LOCal lp%,zip$
1490   RESTORE 1260
1500   zip$=' -j9 '&'ram1_m.zip '
1510   REPeat lp%
1520     READ a$
1530     IF a$="":EXIT lp%
1540     zip$=zip$&a$&" "
1550   END REPeat lp%
1560   do_zip zip$
1570 END DEFine z
1580 :
1590 DEFine PROCedure do_zip (zip$)
1600 LOCal destt$,progg$,dataa$
1610   destt$=DESTD$
1620   progg$=PROGD$
1630   dataa$=DATAD$
1640   DEST_USE "dev8_"  :PROG_USE "dev8_" :DATA_USE "dev8_"
1650   EW dev1_progs_zip;zip$
1660   DEST_USE destt$ :PROG_USE progg$ :DATA_USE dataa$
1670 END DEFine do_zip
1680 :
1690 DATA "dev8_ee_wman_erstr_asm","dev8_ee_wman_data_asm"
1700 DATA "dev8_iod_con2_ptr_wremv_asm"
1710 DATA ""
1720 :
1730 DEFine PROCedure do_copy
1740 LOCal ddr$,lp%,a$ ,f$
1750   ddr$="ram3_"
1760   COPY_O ddr$&smsqe$,"nfa2_new_"&smsqe$
1770   RESTORE 830
1780   REPeat lp%
1790     READ a$
1800     IF a$="":EXIT lp%
1810     COPY_O ddr$&a$&".zip","nfa2_new_"&a$&".zip"
1820   END REPeat lp%
1830   COPY_O ddr$&"qxl.zip","nfa2_new_qxl.zip"
1840   f$ =ddr$&"smsqe"&version$&"_binaries.zip"
1850   COPY_O f$,"nfa2_new_"&"smsqe"&version$&"_binaries.zip"
1860 END DEFine do_copy
1870 :
