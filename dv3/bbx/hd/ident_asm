; DV3 IDE Read drive identification (ByteBox patch)   V3.00    1990

	section dv3

	xdef	id_ident

	xref	id_rsecid		 ; special read ID sector

	include 'dev8_dv3_keys'
	include 'dev8_dv3_hd_keys'
	include 'dev8_dv3_hd_ide_keys'
	include 'dev8_keys_err'

;+++
; Read Drive identification into buffer and set physical characteristics
;
;	d7 c  p drive ID / number
;	a3 c  p pointer to linkage block
;	a4 c  p pointer to physical definition
;
;	error return standard
;---
id_ident
hdi.reg reg	d1/d2/a1
	movem.l hdi.reg,-(sp)
	lea	hdl_buff(a3),a1
	jsr	id_rsecid
	bne.s	hdi_mchk

	move.w	#255,d1
hdi_sloop
	move.b	(a1),d0
	move.b	hdi_revbit(pc,d0.w),(a1)
	addq.l	#2,a1
	dbra	d1,hdi_sloop

	move.w	idei_lsect+hdl_buff(a3),d0
	move.w	d0,ddf_strk(a4) 	 ; number of sectors per track
	move.w	idei_lhead+hdl_buff(a3),d1
	move.w	d1,ddf_heads(a4)	 ; number of heads
	mulu	d1,d0			 ; number of sectors per cylinder
	move.w	d0,ddf_scyl(a4)
	move.w	d0,ddf_asect(a4)	 ; set also
	move.w	idei_lcyl+hdl_buff(a3),d0
	move.l	d0,ddf_atotal(a4)	 ; number of cylinders is total allocation

	moveq	#0,d0

hdi_exit
	movem.l (sp)+,hdi.reg
	rts

hdi_mchk
	moveq	#err.mchk,d0
	bra.s	hdi_exit

hdi_revbit
 dc.b %00000000,%10000000,%01000000,%11000000,%00100000,%10100000,%01100000,%11100000
 dc.b %00010000,%10010000,%01010000,%11010000,%00110000,%10110000,%01110000,%11110000
 dc.b %00001000,%10001000,%01001000,%11001000,%00101000,%10101000,%01101000,%11101000
 dc.b %00011000,%10011000,%01011000,%11011000,%00111000,%10111000,%01111000,%11111000
 dc.b %00000100,%10000100,%01000100,%11000100,%00100100,%10100100,%01100100,%11100100
 dc.b %00010100,%10010100,%01010100,%11010100,%00110100,%10110100,%01110100,%11110100
 dc.b %00001100,%10001100,%01001100,%11001100,%00101100,%10101100,%01101100,%11101100
 dc.b %00011100,%10011100,%01011100,%11011100,%00111100,%10111100,%01111100,%11111100
 dc.b %00000010,%10000010,%01000010,%11000010,%00100010,%10100010,%01100010,%11100010
 dc.b %00010010,%10010010,%01010010,%11010010,%00110010,%10110010,%01110010,%11110010
 dc.b %00001010,%10001010,%01001010,%11001010,%00101010,%10101010,%01101010,%11101010
 dc.b %00011010,%10011010,%01011010,%11011010,%00111010,%10111010,%01111010,%11111010
 dc.b %00000110,%10000110,%01000110,%11000110,%00100110,%10100110,%01100110,%11100110
 dc.b %00010110,%10010110,%01010110,%11010110,%00110110,%10110110,%01110110,%11110110
 dc.b %00001110,%10001110,%01001110,%11001110,%00101110,%10101110,%01101110,%11101110
 dc.b %00011110,%10011110,%01011110,%11011110,%00111110,%10111110,%01111110,%11111110
 dc.b %00000001,%10000001,%01000001,%11000001,%00100001,%10100001,%01100001,%11100001
 dc.b %00010001,%10010001,%01010001,%11010001,%00110001,%10110001,%01110001,%11110001
 dc.b %00001001,%10001001,%01001001,%11001001,%00101001,%10101001,%01101001,%11101001
 dc.b %00011001,%10011001,%01011001,%11011001,%00111001,%10111001,%01111001,%11111001
 dc.b %00000101,%10000101,%01000101,%11000101,%00100101,%10100101,%01100101,%11100101
 dc.b %00010101,%10010101,%01010101,%11010101,%00110101,%10110101,%01110101,%11110101
 dc.b %00001101,%10001101,%01001101,%11001101,%00101101,%10101101,%01101101,%11101101
 dc.b %00011101,%10011101,%01011101,%11011101,%00111101,%10111101,%01111101,%11111101
 dc.b %00000011,%10000011,%01000011,%11000011,%00100011,%10100011,%01100011,%11100011
 dc.b %00010011,%10010011,%01010011,%11010011,%00110011,%10110011,%01110011,%11110011
 dc.b %00001011,%10001011,%01001011,%11001011,%00101011,%10101011,%01101011,%11101011
 dc.b %00011011,%10011011,%01011011,%11011011,%00111011,%10111011,%01111011,%11111011
 dc.b %00000111,%10000111,%01000111,%11000111,%00100111,%10100111,%01100111,%11100111
 dc.b %00010111,%10010111,%01010111,%11010111,%00110111,%10110111,%01110111,%11110111
 dc.b %00001111,%10001111,%01001111,%11001111,%00101111,%10101111,%01101111,%11101111
 dc.b %00011111,%10011111,%01011111,%11011111,%00111111,%10111111,%01111111,%11111111

	end
