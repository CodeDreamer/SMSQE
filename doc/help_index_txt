QD Help Index.

1 Why a help index
2 Using the help index
3 Creating a new help index
4 A note for german QD Users

1 - Why a help index?
QD has a "help" feature. This can, with some effort, be used to find your
way around the source files a bit more easily.

Indeed, one of the problems with the source files (at least for me), is to
find a file containing a certain subroutine. The problem is that you are
editing (or looking at) a certain source file. In there, a jump is
made to a subroutine - now you have to fing the source file containing
this subroutine.

I generally use FiFi for that. However, that forces me to leave QD, which is
what I use to edit the source files.

It is possible, though, to use QD itself to bring up the file containing
the label.


2 - Using the help index

For this, proceed as follows, by using the "help_index" file found in the
"help" directory.

Install QD as a Thing (by LRESPR'ing the QD file).

Install the "help_index" file in any subdirectory of your choosing. Of course,
you may also leave it where it is.

Open the QD "Status" menu (F5). Change the  "Help file" name so that it
points to the DIRECTORY containing the "help_index" file (NOT to the
filename itself!). If the "help_index" file is contained in the default
dev8_help_ directory, the "help file" name in QD should read "dev8_help_".

In the QD Word submenu (F6) possibly change the 'word delimiters' so that the
underscore character '_' is NOT a word delimiter - else you will not be
able to find labels containing the underscore.

Now whenever you find a subroutine and need the file containing the
corresponding label, bring the pointer over the label in your source file
and hit F1.

This brings up a new QD with the file containing this subroutine.

DO NOT CHANGE THE NAME OF THE "HELP INDEX" FILE - IT MUUST BE CALLED
"HELP_INDEX" (German users - see below!).



3 - Creating a new help index.

You can create a new help index, or your own help index. The easiest way
for this is to use the "make_help_index_bas" file in the "extras" subdirectory.

This scans a device (or directory), including all subdirectories for
files ending in "_asm". If such a file is found, it is scanned to see
whether it contains an "XDEF". If yes, the label thus XDEFed is added
to the list.

To run it, load the file (of course).

Line 140 contains the device where the "help_index" file will be stored.
This is normally RAM1_ - but you can change it of course (e.g. dev8_help_).

The data in line 180 tells the program where to look for _asm files.
Possibly change the device in that line. You may also add more devices or
(sub)directories - but there must be an empty string at the end.
							
The program makes use of ramdisks.
If you don't like the default report channels, you can change the names
in lines 310 and 320.

Then just run the program.


4 - A note for German QD Users

Please note that, if you are using a German version of QD, you may have to
use the name "Hilfe_index" and not "Help_index" for the help file. Just rename
it...


W. Lenerz"
