; Procedure to execute programs    V2.00     1988   Tony Tebby   QJUMP

; 2003-01-18  V2.01  added function fep     pjwitte 2oo3


        section hotkey

        xdef    exep
        xdef    fep

        xref    hot_parm
        xref    hot_ldit
        xref    hot_thus
        xref    hot_thfr

        xref    hk_xthid                 ; ex hotkey, return job ID
                                         
        xref    gu_achp0
        xref    gu_rchp
        xref    gu_pause

        xref    ut_rtfd1                 ; return float

        include 'dev8_ee_hk_data'
        include 'dev8_ee_hk_xhdr'

;+++
; jobID = FEP(filename |program name| |I| |G|P|U| |window|memory|)
;---
fep
        bsr.s   exep                     ; do a normal exep, then
        bne.s   ex_rts                   ; dont bother if error
        bra.l   ut_rtfd1                 ; return job ID as float

;+++
; EXEP filename |program name| |I| |G|P|U| |window|memory|
;---
exep
        jsr     hot_parm                 ; standard parameter set
        bne.s   ex_rts

        moveq   #hkh.plen+hki_name+4,d0  ; allocate heap item
        add.w   (a6,a1.l),d0             ; including variable length file name
        jsr     gu_achp0
        bne.s   ex_rts

        jsr     hot_thus                 ; use hk
        bne.s   ex_rchp

        moveq   #hki.xthg,d6             ; execute thing
        jsr     hot_ldit                 ; set up load item

        move.l  a0,a1                    ; item
        or.w    d2,d1                    ; any odd parameters?
        bne.s   ex_do                    ; ... yes

        jsr     hk_xthid                 ; execut hotkey, return jobid

        beq.s   ex_pause                 ; sehr gut
ex_do
        move.w  #hki.xfil,hki_type(a1)   ; tough, now try file

        jsr     hk_xthid                 ; do it

ex_pause
        jsr     hot_thfr                 ; free
        bne.s   ex_rchp                  ; oops
        moveq   #25,d0                   ; half a second
        jsr     gu_pause                 ; ... pause

ex_rchp
        jmp     gu_rchp                  ; done
ex_rts
        rts
        end
